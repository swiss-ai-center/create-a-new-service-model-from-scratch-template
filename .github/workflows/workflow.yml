# Documentation: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses
name: workflow
run-name: workflow

# Allow one concurrent deployment
concurrency:
  group: "service"
  cancel-in-progress: true

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Run ML experiment with DVC
        uses: ./.github/actions/run-ml-experiment-with-dvc
        with:
          ml-experiment-path: ./model_creation
          # TODO: 6. CHANGE THE KEY TO THE AWS ACCESS KEY ID
          aws-access-key-id: ${{ secrets.sample-service_AWS_ACCESS_KEY_ID }}
          # TODO: 7. CHANGE THE KEY TO THE AWS SECRET ACCESS KEY
          aws-secret-access-key: ${{ secrets.sample-service_AWS_SECRET_ACCESS_KEY }}

      - name: Move the model to model_serving directory
        shell: bash
        # TODO: 8. CHANGE THE DESTINATION PATH (AND FILENAME IF NEEDED)
        run: mv ./{model_creation,model_serving}/mnist_model.h5

      - name: Lint Python app
        uses: ./.github/actions/lint-python-app
        with:
          python-app-path: ./model_serving

      - name: Test Python app
        uses: ./.github/actions/test-python-app
        with:
          python-app-path: ./model_serving

      - name: Build and push Docker image to GitHub
        id: build-and-push-docker-image-to-github
        # Only run on main
        if: github.ref == 'refs/heads/main'
        uses: ./.github/actions/build-and-push-docker-image-to-github
        with:
          docker-registry-username: ${{ github.actor }}
          docker-registry-password: ${{ secrets.GITHUB_TOKEN }}
          # TODO: 11. CHANGE THE DOCKER IMAGE NAME
          docker-image-name: swiss-ai-center/sample-service
          # TODO: 12. CHANGE THE PATH TO THE DOCKER IMAGE CONTEXT
          docker-image-context: ./services/sample-service/model_serving

      - name: Prepare configuration files
        # Only run on main
        if: github.ref == 'refs/heads/main'
        shell: bash
        # TODO: 13. CHANGE THE PATH TO THE KUBERNETES CONFIGURATION FILES
        working-directory: services/sample-service/model_serving/kubernetes
        env:
          ENVIRONMENT: production
          LOG_LEVEL: info
          # Core Engine URLs can be added as a list separated by a comma with escaped double quotes
          ENGINE_URLS: "'[\"https://core-engine-swiss-ai-center.kube.isc.heia-fr.ch\"]'"
          # TODO: 14. CHANGE THE SERVICE URL
          SERVICE_URL: https://sample-service-swiss-ai-center.kube.isc.heia-fr.ch
        # TODO: 15. CHANGE THE NAME OF THE CONFIGURATION FILES
        run: |
          # Set sample-service version
          docker_image_tags=(${{ steps.build-and-push-docker-image-to-github.outputs.docker-image-tags }})
          docker_image_sha_tag="${docker_image_tags[1]}"
          yq ".spec.template.spec.containers[0].image = \"$docker_image_sha_tag\"" sample-service.stateful.yml > new-sample-service.stateful.yml && mv new-sample-service.stateful.yml sample-service.stateful.yml

          # Set sample-service configuration
          yq '.data = (.data | to_entries | map({"key": .key, "value": "${" + .key + "}"}) | from_entries)' sample-service.config-map.yml | envsubst > new-sample-service.config-map.yml && mv new-sample-service.config-map.yml sample-service.config-map.yml

      # TODO: 16. CHANGE THE NAME OF THE ACTION
      - name: Deploy sample-service on the Kubernetes cluster
        # Only run on main
        if: github.ref == 'refs/heads/main'
        uses: ./.github/actions/execute-command-on-kubernetes-cluster
        with:
          kube-config: ${{ secrets.KUBE_CONFIG }}
          kube-namespace: swiss-ai-center-prod
          # TODO: 17. CHANGE THE KUBERNETES CONTEXT
          kubectl-context: ./services/sample-service/model_serving/
          # TODO: 18. CHANGE THE NAME OF THE KUBERNETES CONFIGURATION FILES
          kubectl-args: |
            apply \
              -f sample-service.config-map.yml \
              -f sample-service.stateful.yml \
              -f sample-service.service.yml \
              -f sample-service.ingress.yml
